CMake_Minimum_Required(VERSION 2.4)

Project(Deformetrica)
Set (DEFORMETRICA_VERSION_MAJOR 2)
Set (DEFORMETRICA_VERSION_MINOR 1)

If (COMMAND cmake_policy)
    cmake_policy(SET CMP0003 NEW)
Endif (COMMAND cmake_policy)

#
# Find packages (CUDA, ITK & VTK) :
#
Find_Package(ITK)
If (ITK_FOUND)
  Include (${USE_ITK_FILE})
Else (ITK_FOUND)
  Message (FATAL_ERROR "ITK not found. Please set ITK_DIR.")
Endif (ITK_FOUND)

Find_Package(VTK)
If (VTK_FOUND)
  Include (${USE_VTK_FILE})
Else (VTK_FOUND)
  Message (FATAL_ERROR "VTK not found. Please set VTK_DIR.")
Endif (VTK_FOUND)

Find_Package(CUDA)
If (CUDA_FOUND)
    Option (USE_CUDA "Use cuda implementation of convolutions" ON) 
Else (CUDA_FOUND)
    Message ("CUDA was not found.")
Endif (CUDA_FOUND)



Include_Directories(
    ${CMAKE_CURRENT_SOURCE_DIR}
    ${CMAKE_CURRENT_SOURCE_DIR}/../src/algo
    ${CMAKE_CURRENT_SOURCE_DIR}/../src/algo/deformable_objects
    ${CMAKE_CURRENT_SOURCE_DIR}/../src/algo/deformations
    ${CMAKE_CURRENT_SOURCE_DIR}/../src/algo/energy_minimization
    ${CMAKE_CURRENT_SOURCE_DIR}/../src/algo/integrators
    ${CMAKE_CURRENT_SOURCE_DIR}/../src/algo/kernels
    ${CMAKE_CURRENT_SOURCE_DIR}/../src/algo/utilities
    ${CMAKE_CURRENT_SOURCE_DIR}/../src/io
    ${PROJECT_BINARY_DIR}
)

# Release version by default :
If (NOT DEFINED CMAKE_BUILD_TYPE:STRING)
    Set (CMAKE_BUILD_TYPE:STRING Release)
Endif (NOT DEFINED CMAKE_BUILD_TYPE:STRING)

# Extra flags for the C++ compiler :
If (CMAKE_BUILD_TYPE MATCHES Release)
    Set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O2 -march=native -s")
Endif (CMAKE_BUILD_TYPE MATCHES Release)



# Set computations on double precision by default :
If (NOT DEFINED SET_DOUBLE_PRECISION)
    Set (SET_DOUBLE_PRECISION YES)
Endif (NOT DEFINED SET_DOUBLE_PRECISION)
If (SET_DOUBLE_PRECISION)
    Option (USE_DOUBLE_PRECISION "Deformetrica will make computations in double precision" ON) 
Else (SET_DOUBLE_PRECISION)
    Message ("Computations will be in simple precision")
Endif (SET_DOUBLE_PRECISION)


# Configure a header file to pass some of the CMake settings to the source code :
Configure_File (
    "${PROJECT_SOURCE_DIR}/DeformetricaConfig.h.in"
    "${PROJECT_BINARY_DIR}/DeformetricaConfig.h"
)

If (USE_CUDA)

    Message("Deformetrica will be compiled with Cuda")

    # Set default compute capability to 1.3 in order to enable double precision with Cuda :
    If (NOT DEFINED COMPUTE_CAPABILITY_GPU)
        Set (COMPUTE_CAPABILITY_GPU 13)
    Endif (NOT DEFINED COMPUTE_CAPABILITY_GPU)

    Set (CUDA_NVCC_FLAGS "${CUDA_NVCC_FLAGS} -gencode arch=compute_${COMPUTE_CAPABILITY_GPU},code=sm_${COMPUTE_CAPABILITY_GPU}")

    # Library containing the Cuda operations
    Set (LIB_TYPE STATIC)
    Cuda_Add_Library (
    CudaConvolution ${LIB_TYPE}
        ${CMAKE_CURRENT_SOURCE_DIR}/../lib/cuda_convolutions/GaussFunction.h
        ${CMAKE_CURRENT_SOURCE_DIR}/../lib/cuda_convolutions/RadialFunction.h
        ${CMAKE_CURRENT_SOURCE_DIR}/../lib/cuda_convolutions/ScalarRadialKernel.h
        ${CMAKE_CURRENT_SOURCE_DIR}/../lib/cuda_convolutions/GpuConv1D.cu
        ${CMAKE_CURRENT_SOURCE_DIR}/../lib/cuda_convolutions/GpuConv2D.cu
    )
    Set (CUDA_LIBS ${CUDA_LIBS} CudaConvolution)

Cuda_Add_Executable(benchmark
  ../src/algo/utilities/SimpleTimer.cxx
  cuda_benchmark/benchmark.cxx
)

Cuda_Add_Executable(sparseMatching2
  ../src/io/SparseDiffeoParametersXMLFile.cxx
  ../src/io/DeformableObjectParametersXMLFile.cxx
  ../src/io/SparseDiffeoParameters.cxx
  ../src/io/DeformableObjectParameters.cxx
  ../src/algo/utilities/SimpleTimer.cxx
  ../src/algo/utilities/myvtkPolyDataNormals.cxx
  matching/sparseMatching2.cxx
)

Cuda_Add_Executable(sparseMatching3
  ../src/io/SparseDiffeoParametersXMLFile.cxx
  ../src/io/DeformableObjectParametersXMLFile.cxx
  ../src/io/SparseDiffeoParameters.cxx
  ../src/io/DeformableObjectParameters.cxx
  ../src/algo/utilities/SimpleTimer.cxx
  ../src/algo/utilities/myvtkPolyDataNormals.cxx
  matching/sparseMatching3.cxx
)

Cuda_Add_Executable(sparseAtlas2
  ../src/io/SparseDiffeoParametersXMLFile.cxx
  ../src/io/DeformableObjectParametersXMLFile.cxx
  ../src/io/SparseDiffeoParameters.cxx
  ../src/io/DeformableObjectParameters.cxx
  ../src/algo/utilities/SimpleTimer.cxx
  ../src/algo/utilities/myvtkPolyDataNormals.cxx
  atlas_building/sparseAtlas2.cxx
)

Cuda_Add_Executable(sparseAtlas3
  ../src/io/SparseDiffeoParametersXMLFile.cxx
  ../src/io/DeformableObjectParametersXMLFile.cxx
  ../src/io/SparseDiffeoParameters.cxx
  ../src/io/DeformableObjectParameters.cxx
  ../src/algo/utilities/SimpleTimer.cxx
  ../src/algo/utilities/myvtkPolyDataNormals.cxx
  atlas_building/sparseAtlas3.cxx
)

Cuda_Add_Executable(ShootAndFlow2
	../src/io/SparseDiffeoParametersXMLFile.cxx
	../src/io/DeformableObjectParametersXMLFile.cxx
	../src/io/SparseDiffeoParameters.cxx
	../src/io/DeformableObjectParameters.cxx
	../src/algo/utilities/myvtkPolyDataNormals.cxx
	shooting/ShootAndFlow2.cxx
)

Cuda_Add_Executable(ShootAndFlow3
	../src/io/SparseDiffeoParametersXMLFile.cxx
	../src/io/DeformableObjectParametersXMLFile.cxx
	../src/io/SparseDiffeoParameters.cxx
	../src/io/DeformableObjectParameters.cxx
	../src/algo/utilities/myvtkPolyDataNormals.cxx
	shooting/ShootAndFlow3.cxx
)

Cuda_Add_Executable(CreateDeformationField
    ../src/io/DeformationFieldIO.txx
	../src/io/SparseDiffeoParameters.cxx
	../src/io/SparseDiffeoParametersXMLFile.cxx
	../src/io/DeformableObjectParameters.cxx
	../src/algo/utilities/myvtkPolyDataNormals.cxx
	deformation/CreateDeformationField.cxx
)

Target_Link_Libraries(benchmark
  ${ITK_LIBRARIES}
  ${CUDA_LIBS}
)



else(USE_CUDA)

    Message("Deformetrica will be compiled without Cuda")

Add_Executable(sparseMatching2
  ../src/io/SparseDiffeoParametersXMLFile.cxx
  ../src/io/DeformableObjectParametersXMLFile.cxx
  ../src/io/SparseDiffeoParameters.cxx
  ../src/io/DeformableObjectParameters.cxx
  ../src/algo/utilities/SimpleTimer.cxx
  ../src/algo/utilities/myvtkPolyDataNormals.cxx
  matching/sparseMatching2.cxx
)

Add_Executable(sparseMatching3
  ../src/io/SparseDiffeoParametersXMLFile.cxx
  ../src/io/DeformableObjectParametersXMLFile.cxx
  ../src/io/SparseDiffeoParameters.cxx
  ../src/io/DeformableObjectParameters.cxx
  ../src/algo/utilities/SimpleTimer.cxx
  ../src/algo/utilities/myvtkPolyDataNormals.cxx
  matching/sparseMatching3.cxx
)

Add_Executable(sparseAtlas2
  ../src/io/SparseDiffeoParametersXMLFile.cxx
  ../src/io/DeformableObjectParametersXMLFile.cxx
  ../src/io/SparseDiffeoParameters.cxx
  ../src/io/DeformableObjectParameters.cxx
  ../src/algo/utilities/SimpleTimer.cxx
  ../src/algo/utilities/myvtkPolyDataNormals.cxx
  atlas_building/sparseAtlas2.cxx
)

Add_Executable(sparseAtlas3
  ../src/io/SparseDiffeoParametersXMLFile.cxx
  ../src/io/DeformableObjectParametersXMLFile.cxx
  ../src/io/SparseDiffeoParameters.cxx
  ../src/io/DeformableObjectParameters.cxx
  ../src/algo/utilities/SimpleTimer.cxx
  ../src/algo/utilities/myvtkPolyDataNormals.cxx
  atlas_building/sparseAtlas3.cxx
)

Add_Executable(ShootAndFlow2
	../src/io/SparseDiffeoParametersXMLFile.cxx
	../src/io/DeformableObjectParametersXMLFile.cxx
	../src/io/SparseDiffeoParameters.cxx
	../src/io/DeformableObjectParameters.cxx
	../src/algo/utilities/myvtkPolyDataNormals.cxx
	shooting/ShootAndFlow2.cxx
)

Add_Executable(ShootAndFlow3
	../src/io/SparseDiffeoParametersXMLFile.cxx
	../src/io/DeformableObjectParametersXMLFile.cxx
	../src/io/SparseDiffeoParameters.cxx
	../src/io/DeformableObjectParameters.cxx
	../src/algo/utilities/myvtkPolyDataNormals.cxx
	shooting/ShootAndFlow3.cxx
)

Add_Executable(CreateDeformationField
  ../src/io/DeformationFieldIO.txx
  ../src/io/SparseDiffeoParameters.cxx
  ../src/io/SparseDiffeoParametersXMLFile.cxx
  ../src/io/DeformableObjectParameters.cxx
  ../src/algo/utilities/myvtkPolyDataNormals.cxx
  deformation/CreateDeformationField.cxx
)

endif(USE_CUDA)


#
# Target link :
#

Target_Link_Libraries(sparseMatching2
  ${ITK_LIBRARIES}
  ${CUDA_LIBS}
  vtkCommon
  vtkGraphics
  vtkIO
  vtkRendering
  vtkFiltering
)

Target_Link_Libraries(sparseMatching3
  ${ITK_LIBRARIES}
  ${CUDA_LIBS}
  vtkCommon
  vtkGraphics
  vtkIO
  vtkRendering
  vtkFiltering
)

Target_Link_Libraries(sparseAtlas2
  ${ITK_LIBRARIES}
  ${CUDA_LIBS}
  vtkCommon
  vtkGraphics
  vtkIO
  vtkRendering
  vtkFiltering
)

Target_Link_Libraries(sparseAtlas3
  ${ITK_LIBRARIES}
  ${CUDA_LIBS}
  vtkCommon
  vtkGraphics
  vtkIO
  vtkRendering
  vtkFiltering
)

Target_Link_Libraries(ShootAndFlow2
  ${ITK_LIBRARIES}
  ${CUDA_LIBS}
  vtkCommon
  vtkGraphics
  vtkIO
  vtkRendering
  vtkFiltering
)

Target_Link_Libraries(ShootAndFlow3
  ${ITK_LIBRARIES}
  ${CUDA_LIBS}
  vtkCommon
  vtkGraphics
  vtkIO
  vtkRendering
  vtkFiltering
)

Target_Link_Libraries(CreateDeformationField
  ${ITK_LIBRARIES}
  ${CUDA_LIBS}
  vtkCommon
  vtkGraphics
  vtkIO
  vtkRendering
  vtkFiltering
)


#
# Dependencies :
#
Add_Dependencies (sparseMatching2
  ${ITK_LIBRARIES}
  vtkCommon
  vtkGraphics
  vtkIO
  vtkRendering
  vtkFiltering
)

Add_Dependencies (sparseMatching3
  ${ITK_LIBRARIES}
  vtkCommon
  vtkGraphics
  vtkIO
  vtkRendering
  vtkFiltering
)

Add_Dependencies (sparseAtlas2
  ${ITK_LIBRARIES}
  vtkCommon
  vtkGraphics
  vtkIO
  vtkRendering
  vtkFiltering
)

Add_Dependencies (sparseAtlas3
  ${ITK_LIBRARIES}
  vtkCommon
  vtkGraphics
  vtkIO
  vtkRendering
  vtkFiltering
)

Add_Dependencies (ShootAndFlow2
  ${ITK_LIBRARIES}
  vtkCommon
  vtkGraphics
  vtkIO
  vtkRendering
  vtkFiltering
)

Add_Dependencies (ShootAndFlow3
  ${ITK_LIBRARIES}
  vtkCommon
  vtkGraphics
  vtkIO
  vtkRendering
  vtkFiltering
)

Add_Dependencies (CreateDeformationField
  ${ITK_LIBRARIES}
  vtkCommon
  vtkGraphics
  vtkIO
  vtkRendering
  vtkFiltering
)
